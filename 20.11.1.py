#Программа обрабатывает файл “1-in.txt” с результатами сессии студентов.
#В файле в первой строке лежит число студентов, количество зачетов и экзаменов.
#Затем про каждого студента: ФИО, результаты зачетов(зачтено/незачтено) и оценки за экзамены.
#Программа должна в файл “1-out.txt" записать информацию про каждую категорию студентов: стипендианты(все сдано с оценками не ниже 4),
#отчисленные(более двух предметов не сдано), должники(что-то не сдано, но не больше 2-х долгов), остальные.
#Выходной файл должен состоять из 8 строк: 1 строка) Стипендианты: количество, 2 строка) Фамилии стипендиантов.#Программа обрабатывает файл “1-in.txt” с результатами сессии студентов.
#В файле в первой строке лежит число студентов, количество зачетов и экзаменов. Затем про каждого студента: ФИО, результаты зачетов(зачтено/незачтено) и оценки за экзамены.
#Программа должна в файл “1-out.txt" записать информацию про каждую категорию студентов: стипендианты(все сдано с оценками не ниже 4), отчисленные(более двух предметов не сдано),
#должники(что-то не сдано, но не больше 2-х долгов), остальные. Выходной файл должен состоять из 8 строк: 1 строка) Стипендианты: количество, 2 строка) Фамилии стипендиантов.

f=open(1'-in.txt','r')
i=[[str]for str in f]
f.close()

student, cred, exam=[int(number) for number in i[0][0].split(' ')]
student_i=[str(i[name]) [2:str(i[name].find(' '):]for name in range (1,len(i))]
cred_i=[str(i[cred]).count('незачно') for cred in range (1,len(i))]
exam_i=[str(i[exam]).count('2'),str(i[exam]).count('3')) for exam in range(1,len(i))]

stipend, lose, have, oth=[], [], [], []
for i in range(student):
    if cred_i[b]==0 and sum(exam_i[b]==0:
        stipend.append(student_i[b])
    elif cred_i[b]+exam_i[b][0]==0:
        oth.append(student_i[b])
    elif cred_i[b]+exam_i[b][0]>2:
        lose.append(student_i[b])
    elif cred_i[b]+exam_i[b][0]<=2:
        have.append(student_i[b])

out.open(1'-out.txt','w)
out.write('Стипенданты:{}\n{}\n'.format (len(stipend),' '.join(stipend))
out.write('Отчисленные:{}\n{}\n').format (len(lose),' '.join(lose))
out.write('Должники:{}\n{}\n').format (len(have),' '.join(have))
out.write('Остальные:{}\n{}\n').format (len(oth),' '.join(oth))

out.close()
